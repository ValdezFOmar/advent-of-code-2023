[tool.poetry]
name = "aoc"
version = "0.1.0"
description = "Solved challenges from AoC 2023"
authors = ["Omar Valdez <80359343+ValdezFOmar@users.noreply.github.com>"]
license = "GPL-3.0-only"
readme = "README.md"
repository = "https://github.com/ValdezFOmar/advent-of-code-2023"
packages = [
    { include = "aoc" },
    { include = "utils" }
]

[tool.poetry.scripts]
genday = "aoc.tools.genday:main"

[tool.poetry.dependencies]
python = "^3.11"
regex = "^2023.10.3"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pylint = "^3.0.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"



[tool.pyright]
reportConstantRedefinition = true
# reportPrivateUsage = true


[tool.black]
line-length = 100
target-version = ["py311"]
include = '''
(
    \.pyi?$
    |aoc/
    |utils/
)
'''



[tool.pytest.ini_options]
addopts = "--ignore=./aoc/tools/_day_template/"
testpaths = [
    "aoc",
    "utils"
]



[tool.pylint.main]
ignore-paths = [
    "aoc/tools/_day_template/*",
    ".venv/",
    "venv/",
    ".pytest_cache/",
    ".git/",
]
recursive = "yes"

[tool.pylint.basic]
good-names = ["TEST_OUTPUT"]

[tool.pylint.messages_control]
disable = [
    "missing-module-docstring",
    "missing-function-docstring",
    "missing-class-docstring",
    "redefined-builtin",
]

[tool.pylint.format]
max-line-length = 100

[tool.pylint.design]
max-returns = 8
